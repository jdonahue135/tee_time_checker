name: Check Tee Times

on:
  schedule:
    - cron: '*/10 * * * *' # Every 10 minutes
  workflow_dispatch: # Allows manual trigger from GitHub UI

env:
  EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
  EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
  EMAIL_RECEIVERS: ${{ secrets.EMAIL_RECEIVERS }}

jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Restore last sent timestamp from cache
        uses: actions/cache@v3
        with:
          path: last_sent.txt
          key: last-sent-${{ github.run_id }}
          restore-keys: |
            last-sent-

      - name: Capture timestamp before run
        id: before
        run: |
          if [ -f last_sent.txt ]; then
            cat last_sent.txt
          else
            echo "0"  # Default value for first run or if the file is empty
          fi > before_timestamp.txt

      - name: Run tee time checker
        run: python fore_up_checker.py

      - name: Check if tee times were found
        id: check_tee_times
        run: |
          if [ -f last_sent.txt ]; then
            BEFORE=$(cat before_timestamp.txt)
            AFTER=$(cat last_sent.txt)
            echo "Before: $BEFORE"
            echo "After: $AFTER"

            if [ -n "$AFTER" ] && (( $(echo "$AFTER > $BEFORE" | bc -l) )); then
              echo "tee_times_found=true" >> $GITHUB_ENV
            else
              echo "tee_times_found=false" >> $GITHUB_ENV
            fi
          else
            echo "tee_times_found=false" >> $GITHUB_ENV
          fi

      - name: Save last sent timestamp to cache
        if: ${{ env.tee_times_found == 'true' }}
        uses: actions/cache/save@v3
        with:
          path: last_sent.txt
          key: last-sent-${{ github.run_id }}
